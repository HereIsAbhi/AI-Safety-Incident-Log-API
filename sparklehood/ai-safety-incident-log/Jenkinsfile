pipeline {
    agent any

    environment {
        NODE_VERSION = '16' // Specify your Node.js version
        DOCKER_IMAGE = 'hereisabhi/ai-safety-incident-log' // Change to your Docker Hub repo
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from the repository
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    docker.image("node:${NODE_VERSION}").inside {
                        sh 'npm install'
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    docker.image("node:${NODE_VERSION}").inside {
                        sh 'npm test'
                    }
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    docker.image("node:${NODE_VERSION}").inside {
                        sh 'npm run build'
                    }
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
                        def app = docker.build("${DOCKER_IMAGE}:${env.BUILD_NUMBER}")
                        app.push()
                        app.push('latest')
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Add your deployment commands here
                    // For example, if deploying to a server via SSH:
                    // sh 'ssh user@yourserver "cd /path/to/app && git pull && npm install && npm run start"'
                }
            }
        }
    }

    post {
        success {
            echo 'Build, test, and Docker push succeeded!'
        }
        failure {
            echo 'Build, test, or Docker push failed.'
        }
    }
} 